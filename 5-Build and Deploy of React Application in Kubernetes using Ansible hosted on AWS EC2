Build and Deploy series: The Series here does not focus on individual tools but focuses more on how different DevOps tools are connected to each other

The series focuses mainly on Build and Deploy and also may not follow best practises of DevOps but we will speak about the best practises and places where in our project to be improved to make it a secured setup.

##Note: The video above here demonstrates blog in Telugu, recommend watching the video in separate tab and blog in seperate tab for easy practise.





click here to navigate to YouTube

We recommend access the blog through your laptop/Computer for better visibility.The coloured texts are links that can help you navigate to particular topic and each code snippet has copy button appears when hovered, This blog particularly designed with screenshots to help you practise and gain confidence on DevOps world##

What Can you expect from Blog:
Installation of Ansible
Troubleshoot Ansible Installation if config file is missed
How to make connection between servers for Ansible using SSH
How to update default hosts file with groups
How to check ansible hosts connection using ping
How to run ansible playbooks, updating ignore_errors and syntax check 
Configuration to be used for this project:
Image: Ubuntu Server 24.04

Type: t3.micro

In case, you want to use same as Docker image, make project with t3.large . make sure you set remote configurations and ssh key connection if you are using t3.micro

the below project is setup in assumption of having both docker and ansible in single server and with type t3.large

#Note: AWS Free Tier is only for 750 Hours per year, so make sure you stop instance once you are done with the project


Before We start this Ansible, i recommend you to watch all the other series, as we are making changes to single react project from the start

We will use the same project here

Ansible is widely popular configuration management tool and can be installed in one server and you can run tasks in other servers if Ansible Master(server in which ansible is installed ) and other servers have SSH connection

Ansible files must be saved with .yaml or .yml extension

Before, We proceed on Ansible, let us move Bash scripts that we have written in Part-4 to Github repository


We will use this repository as a part of our project
We will install Ansible in our Build Server and then we will make an SSH  connection to our Deployserver from BuildServer

We will ask Ansible to run build.sh script in Buildserver and then deploy.sh in Deployserver

We will write a ansible playbook to achieve this, playbook is a set of tasks to be performed

let us now start with project by installing Ansible

login to Buildserver and install ansible by running these commands


sudo apt update
sudo apt install software-properties-common
sudo add-apt-repository --yes --update ppa:ansible/ansible
sudo apt install ansible 
Copy



check ansible installation by command

ansible --version
Copy


ansible config file shows None, by default ansible creates config file.
##note: if config file does not show none for you , no need to create config file
###if config file shows none#######################################
let us create a default config file
sudo mkdir -p /etc/ansible
sudo touch /etc/ansible/ansible.cfg
sudo touch /etc/ansible/hosts
Copy
We have created ansible directory in etc and and ansible.cfg file and hosts file inside ansible directory

Now lets edit the config file
sudo vi /etc/ansible/ansible.cfg
Copy
Paste the contents
[defaults]
inventory = /etc/ansible/hosts
remote_user = ubuntu
private_key_file = /path/to/your/private/key
Copy
Now before we make changes to private key path, let us create a ssh-key file for ansible using command
ssh-keygen
Copy

copy the private key path that is shown in brackets of Enter file in which to save the key(),
if you have used the default
so now our ansible.cfg file is updated in this way
[defaults]
inventory = /etc/ansible/hosts
remote_user = ubuntu
private_key_file = /home/ubuntu/.ssh/id_ed25519
Copy
Now you can verify our ansible config file by ansible --version, it will show config file now
ansible --version
Copy


##########################################################################

Now when we created ssh-keygen as part of ansible config file creation, it generates two keys
private key and public key



recommend you to create key pair for ansible
copy the contents of public key


it cab be id_rsa and id_rsa.pub keys in your case, copy the contents of id_rsa.pub if so
Now login to your Deployserver and in /home/ubuntu/.ssh/authorized_keys, we will paste the
copied public key to establish connection
sudo vi /home/ubuntu/.ssh/authorized_keys
Copy

Note:You can paste the public key in any number of servers,you want to delegate your ansible tasks

When AWS EC2 is stopped and started again, its public Ip changes but private IP remains the same.

We will make use of this , copy Deployserver private IP address.

Come back to BuildServer and in /etc/ansible/hosts , we will update this server ip 

hosts file is a file in which we will update IP's or hostnames or servers in which we want to ansible to run

By default hosts file is /etc/ansible/hosts,
sudo vi /etc/ansible/hosts
Copy


here in above screenshot [deployserver] means group, anything inside [] is considered group
and when we specify in ansible playbook hosts:deployserver, ansible executes tasks in all
the Ip's that are under the group

Now let us check ansible connection of hosts by command
ansible all -m ping
Copy

so we were able to make connection between build server and deploy server through ansible
since our ansible is in buildserver, let us write two playbook in BuildServer one playbook to build images and other playbook to deploy images
Build of React Application
Let us grab some examples on how to run bash scripts in ansible from ansible official documentation .since we have our ansible on the same server in which we are building docker images,we will write playbook to execute tasks on localhost
---
- name: Playbook to build our docker image
  hosts: localhost
  tasks:  
   - name: remove existing bashscripts directory and ignore task if bashscripts folder is not there
     ansible.builtin.shell:
       cmd: sudo rm -r bashscripts
     ignore_errors: yes    
       
   - name: create new bashscripts directory
     ansible.builtin.shell:
       cmd: sudo mkdir bashscripts         

   - name: clone bash scripts repo into server
     ansible.builtin.shell:
       cmd: sudo git clone https://github.com/Hari0o/react-nginx_bashscripts.git
       chdir: bashscripts/

   - name: giving ownership to build.sh and giving excecuting permissions to build.sh
     ansible.builtin.shell:
       cmd: sudo chown ubuntu build.sh && sudo chmod 744 build.sh
       chdir: bashscripts/react-nginx_bashscripts

   - name: running script to make build
     ansible.builtin.shell: 
       cmd: ./build.sh
       chdir: bashscripts/react-nginx_bashscripts/
Copy

Here in the top, we have asked in first step to remove directory bashscripts and we also added attribute ignore_errors:yes attribute to task-1, ansible executes tasks one by one. In case if task-1 fails, it will not proceed to task-2 and will kill playbook execution throwing error.In the above playbook, i have used only shell module, you can use different modules likewise one for git and many. you can find modules with examples in ansible docs

Now before running playbook you can check syntax of playbook with command
ansible-playbook build.yaml --syntax-check
Copy



Now lets run our playbook as we see no syntax error
ansible-playbook build.yaml
Copy


once playbook is completed, you can verify in our docker hub last push time of image


Our build is successful and pushed to Docker hub

Deploy of React Application
Now let us write another playbook in Buildserver to deploy kubernetes in our Deployserver
since Deployserver is a remote server, we made ssh connection and verified connectivity already

---
- name: Playbook to deploy our application in kubernetes
  hosts: deployserver
  tasks:  
   - name: remove existing bashscripts directory and ignore task if bashscripts folder is not there
     ansible.builtin.shell:
       cmd: sudo rm -r bashscripts
     ignore_errors: yes    
       
   - name: create new bashscripts directory
     ansible.builtin.shell:
       cmd: sudo mkdir bashscripts         

   - name: clone bash scripts repo into server
     ansible.builtin.shell:
       cmd: sudo git clone https://github.com/Hari0o/react-nginx_bashscripts.git
       chdir: bashscripts/

   - name: giving ownership to build.sh and giving excecuting permissions to deploy.sh
     ansible.builtin.shell:
       cmd: sudo chown ubuntu deploy.sh && sudo chmod 744 deploy.sh
       chdir: bashscripts/react-nginx_bashscripts

   - name: running script to make build
     ansible.builtin.shell: 
       cmd: ./deploy.sh
       chdir: bashscripts/react-nginx_bashscripts/
Copy

In the above task-3 "&&" represents one command after other, it is linux command and in hosts , we mentioned deployserver, it is the group name that we added in /etc/ansible/hosts file and check syntax by
ansible-playbook deploy.yaml --syntax-check
Copy


Now let us run the playbook by command

ansible-playbook deploy.yaml
Copy




once playbook is done, verify pods restart time in Deployserver

kubectl get pods -n react-nginx
Copy


This shows our Deployment is successful

####To Add work with different hosts file##############################
In case, you want to work with different hosts file instead of default hosts file
create a host file with any name , let us create testhosts with dummy data

In this case, the command to be run as
ansible-playbook -i testhosts deploy.yaml
Copy
here in the above example testhosts refer to inventory
#################################################################
Domain visibility
Go for AWS EC2, security groups and In inbound rules allow port 80,as our nginx listens on port 80


post that copy AWS EC2 public IP,

Log into your GoDaddy Console and My Products >Domain > DNS.In A records, paste the AWS EC2 public IP

Now we will be able to access our domain in which we can see our React application that we have built and deployed

AWS public IP changes once the system is stopped and started back. to avoid this, we can use AWS Elastic IP with some cost charges



=================================

ubuntu@ip-172-31-87-138:~$ sudo apt update
sudo apt install software-properties-common
sudo add-apt-repository --yes --update ppa:ansible/ansible
sudo apt install ansible 
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Get:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease 
Hit:4 https://download.docker.com/linux/ubuntu noble InRelease                 
Hit:5 http://security.ubuntu.com/ubuntu noble-security InRelease               
Get:6 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [469 kB]
Get:7 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [337 kB]
Fetched 932 kB in 1s (1147 kB/s)                        
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
81 packages can be upgraded. Run 'apt list --upgradable' to see them.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
software-properties-common is already the newest version (0.99.48).
software-properties-common set to manually installed.
0 upgraded, 0 newly installed, 0 to remove and 81 not upgraded.
Repository: 'Types: deb
URIs: https://ppa.launchpadcontent.net/ansible/ansible/ubuntu/
Suites: noble
Components: main
'
Description:
Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications— automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.

http://ansible.com/

If you face any issues while installing Ansible PPA, file an issue here:
https://github.com/ansible-community/ppa/issues
More info: https://launchpad.net/~ansible/+archive/ubuntu/ansible
Adding repository.
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-updates InRelease   
Hit:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble-backports InRelease 
Hit:4 https://download.docker.com/linux/ubuntu noble InRelease                 
Hit:5 http://security.ubuntu.com/ubuntu noble-security InRelease               
Get:6 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu noble InRelease [17.8 kB]
Get:7 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu noble/main amd64 Packages [776 B]
Get:8 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu noble/main Translation-en [472 B]
Fetched 19.1 kB in 1s (21.1 kB/s)
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  ansible-core python3-jmespath python3-kerberos python3-nacl
  python3-ntlm-auth python3-packaging python3-paramiko python3-requests-ntlm
  python3-resolvelib python3-winrm python3-xmltodict sshpass
Suggested packages:
  python-nacl-doc python3-gssapi python3-invoke
The following NEW packages will be installed:
  ansible ansible-core python3-jmespath python3-kerberos python3-nacl
  python3-ntlm-auth python3-packaging python3-paramiko python3-requests-ntlm
  python3-resolvelib python3-winrm python3-xmltodict sshpass
0 upgraded, 13 newly installed, 0 to remove and 81 not upgraded.
Need to get 18.5 MB of archives.
After this operation, 203 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/main amd64 python3-packaging all 24.0-1 [41.1 kB]
Get:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 python3-resolvelib all 1.0.1-1 [25.7 kB]
Get:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/main amd64 python3-jmespath all 1.0.1-1 [21.3 kB]
Get:4 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 python3-kerberos amd64 1.1.14-3.1build9 [21.2 kB]
Get:5 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/main amd64 python3-nacl amd64 1.5.0-4build1 [57.9 kB]
Get:6 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 python3-ntlm-auth all 1.5.0-1 [21.3 kB]
Get:7 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/main amd64 python3-paramiko all 2.12.0-2ubuntu4 [137 kB]
Get:8 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 python3-requests-ntlm all 1.1.0-3 [6308 B]
Get:9 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/main amd64 python3-xmltodict all 0.13.0-1 [13.4 kB]
Get:10 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 python3-winrm all 0.4.3-2 [31.9 kB]
Get:11 http://us-east-1.ec2.archive.ubuntu.com/ubuntu noble/universe amd64 sshpass amd64 1.09-1 [11.7 kB]
Get:12 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu noble/main amd64 ansible-core all 2.16.10-1ppa~noble [1032 kB]
Get:13 https://ppa.launchpadcontent.net/ansible/ansible/ubuntu noble/main amd64 ansible all 9.9.0-1ppa~noble [17.1 MB]
Fetched 18.5 MB in 2s (7480 kB/s)    
Selecting previously unselected package python3-packaging.
(Reading database ... 98601 files and directories currently installed.)
Preparing to unpack .../00-python3-packaging_24.0-1_all.deb ...
Unpacking python3-packaging (24.0-1) ...
Selecting previously unselected package python3-resolvelib.
Preparing to unpack .../01-python3-resolvelib_1.0.1-1_all.deb ...
Unpacking python3-resolvelib (1.0.1-1) ...
Selecting previously unselected package ansible-core.
Preparing to unpack .../02-ansible-core_2.16.10-1ppa~noble_all.deb ...
Unpacking ansible-core (2.16.10-1ppa~noble) ...
Selecting previously unselected package ansible.
Preparing to unpack .../03-ansible_9.9.0-1ppa~noble_all.deb ...
Unpacking ansible (9.9.0-1ppa~noble) ...
Selecting previously unselected package python3-jmespath.
Preparing to unpack .../04-python3-jmespath_1.0.1-1_all.deb ...
Unpacking python3-jmespath (1.0.1-1) ...
Selecting previously unselected package python3-kerberos.
Preparing to unpack .../05-python3-kerberos_1.1.14-3.1build9_amd64.deb ...
Unpacking python3-kerberos (1.1.14-3.1build9) ...
Selecting previously unselected package python3-nacl.
Preparing to unpack .../06-python3-nacl_1.5.0-4build1_amd64.deb ...
Unpacking python3-nacl (1.5.0-4build1) ...
Selecting previously unselected package python3-ntlm-auth.
Preparing to unpack .../07-python3-ntlm-auth_1.5.0-1_all.deb ...
Unpacking python3-ntlm-auth (1.5.0-1) ...
Selecting previously unselected package python3-paramiko.
Preparing to unpack .../08-python3-paramiko_2.12.0-2ubuntu4_all.deb ...
Unpacking python3-paramiko (2.12.0-2ubuntu4) ...
Selecting previously unselected package python3-requests-ntlm.
Preparing to unpack .../09-python3-requests-ntlm_1.1.0-3_all.deb ...
Unpacking python3-requests-ntlm (1.1.0-3) ...
Selecting previously unselected package python3-xmltodict.
Preparing to unpack .../10-python3-xmltodict_0.13.0-1_all.deb ...
Unpacking python3-xmltodict (0.13.0-1) ...
Selecting previously unselected package python3-winrm.
Preparing to unpack .../11-python3-winrm_0.4.3-2_all.deb ...
Unpacking python3-winrm (0.4.3-2) ...
Selecting previously unselected package sshpass.
Preparing to unpack .../12-sshpass_1.09-1_amd64.deb ...
Unpacking sshpass (1.09-1) ...
Setting up python3-ntlm-auth (1.5.0-1) ...
Setting up python3-resolvelib (1.0.1-1) ...
Setting up python3-kerberos (1.1.14-3.1build9) ...
Setting up sshpass (1.09-1) ...
Setting up python3-xmltodict (0.13.0-1) ...
Setting up python3-packaging (24.0-1) ...
Setting up python3-jmespath (1.0.1-1) ...
Setting up python3-nacl (1.5.0-4build1) ...
Setting up python3-requests-ntlm (1.1.0-3) ...
Setting up ansible-core (2.16.10-1ppa~noble) ...
Setting up python3-winrm (0.4.3-2) ...
Setting up ansible (9.9.0-1ppa~noble) ...
Setting up python3-paramiko (2.12.0-2ubuntu4) ...
Processing triggers for man-db (2.12.0-4build2) ...
Scanning processes...                                                           
Scanning candidates...                                                          
Scanning linux images...                                                        

Pending kernel upgrade!
Running kernel version:
  6.8.0-1012-aws
Diagnostics:
  The currently running kernel version is not the expected kernel version
6.8.0-1014-aws.

Restarting the system to load the new kernel will not be handled automatically,
so you should consider rebooting.

Restarting services...

Service restarts being deferred:
 /etc/needrestart/restart.d/dbus.service
 systemctl restart docker.service
 systemctl restart getty@tty1.service
 systemctl restart networkd-dispatcher.service
 systemctl restart serial-getty@ttyS0.service
 systemctl restart systemd-logind.service
 systemctl restart unattended-upgrades.service

No containers need to be restarted.

User sessions running outdated binaries:
 ubuntu @ session #2: sshd[1092,1205]
 ubuntu @ user manager service: systemd[1096]

No VM guests are running outdated hypervisor (qemu) binaries on this host.
ubuntu@ip-172-31-87-138:~$ ansible --version
ansible [core 2.16.10]
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/home/ubuntu/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/ubuntu/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible
  python version = 3.12.3 (main, Jul 31 2024, 17:43:48) [GCC 13.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
ubuntu@ip-172-31-87-138:~$ sudo vi /etc/ansible/ansible.cfg
ubuntu@ip-172-31-87-138:~$ ssh-keygen
Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/ubuntu/.ssh/id_ed25519): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/ubuntu/.ssh/id_ed25519
Your public key has been saved in /home/ubuntu/.ssh/id_ed25519.pub
The key fingerprint is:
SHA256:tbJJ5HIVp2YmQ9cqMjAm91Sx/xtRw6wFmrw6YCCh8hs ubuntu@ip-172-31-87-138
The key's randomart image is:
+--[ED25519 256]--+
|  .    .+.o.o    |
| ...= .. + *.+   |
|o .+.=  = @.  *  |
|.. . .+o.X.o + . |
|  E   +oS.+ o    |
|   o . = = . .   |
|  .     =   o    |
|         .   o   |
|            .    |
+----[SHA256]-----+
ubuntu@ip-172-31-87-138:~$ sudo vi /etc/ansible/ansible.cfg
ubuntu@ip-172-31-87-138:~$ ansible --version
ansible [core 2.16.10]
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/home/ubuntu/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3/dist-packages/ansible
  ansible collection location = /home/ubuntu/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/bin/ansible
  python version = 3.12.3 (main, Jul 31 2024, 17:43:48) [GCC 13.2.0] (/usr/bin/python3)
  jinja version = 3.1.2
  libyaml = True
ubuntu@ip-172-31-87-138:~$ cd .ssh
ubuntu@ip-172-31-87-138:~/.ssh$ ls
authorized_keys  id_ed25519  id_ed25519.pub
ubuntu@ip-172-31-87-138:~/.ssh$ cat id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIORMZ+YKwu4Q4h6TgrN2bitxYIh6TnX7X4BZyW65g/dL ubuntu@ip-172-31-87-138
In deploy server
-----------------
ubuntu@ip-172-31-36-29:~$ sudo vi /home/ubuntu/.ssh/authorized_keys
ubuntu@ip-172-31-36-29:~$ 
ubuntu@ip-172-31-89-173:~$ sudo su - root
root@ip-172-31-89-173:~# sudo su - ubuntu
ubuntu@ip-172-31-89-173:~$
In build server
-----------------
ubuntu@ip-172-31-87-138:~/.ssh$ sudo su - root
root@ip-172-31-87-138:~# sudo su - ubuntu
ubuntu@ip-172-31-87-138:~$ sudo vi /etc/ansible/hosts
ubuntu@ip-172-31-87-138:~/.ssh$ sudo su - root
root@ip-172-31-87-138:~# 
ubuntu@ip-172-31-87-138:~$ ansible all -m ping
Note:: if above command is not working follow below steps:
1. Check manually if you can connect-ssh -i /home/ubuntu/.ssh/id_ed25519 ubuntu@172.31.45.52
2.chmod 600 /home/ubuntu/.ssh/id_ed25519
3.ansible all -m ping --private-key /home/ubuntu/.ssh/id_ed25519
*******************
The authenticity of host '172.31.86.66 (172.31.86.66)' can't be established.
ED25519 key fingerprint is SHA256:yoEGQdZMB617J5l4HWeA+Yc18RaOdqltG52tuEXkj1Q.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
172.31.86.66 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "ping": "pong"
}


ubuntu@ip-172-31-87-138:~$ sudo vi build.yaml
ubuntu@ip-172-31-87-138:~$ cat build.yaml
---
- name: Playbook to build our docker image
  hosts: localhost
  tasks:  
   - name: remove existing bashscripts directory and ignore task if bashscripts folder is not there
     ansible.builtin.shell:
       cmd: sudo rm -r bashscripts
     ignore_errors: yes    
       
   - name: create new bashscripts directory
     ansible.builtin.shell:
       cmd: sudo mkdir bashscripts         

   - name: clone bash scripts repo into server
     ansible.builtin.shell:
       cmd: sudo git clone https://github.com/akhilgit19/react-nginx_bashscripts.git
       chdir: bashscripts/

   - name: giving ownership to build.sh and giving excecuting permissions to build.sh
     ansible.builtin.shell:
       cmd: sudo chown ubuntu build.sh && sudo chmod 744 build.sh
       chdir: bashscripts/react-nginx_bashscripts

   - name: running script to make build
     ansible.builtin.shell: 
       cmd: ./build.sh
       chdir: bashscripts/react-nginx_bashscripts/
ubuntu@ip-172-31-87-138:~$ ansible-playbook build.yaml --syntax-check

playbook: build.yaml
ubuntu@ip-172-31-87-138:~$ ansible-playbook build.yaml

PLAY [Playbook to build our docker image] ************************************************************

TASK [Gathering Facts] *******************************************************************************
ok: [localhost]

TASK [remove existing bashscripts directory and ignore task if bashscripts folder is not there] ******
fatal: [localhost]: FAILED! => {"changed": true, "cmd": "sudo rm -r bashscripts", "delta": "0:00:00.015925", "end": "2024-08-31 07:04:31.235527", "msg": "non-zero return code", "rc": 1, "start": "2024-08-31 07:04:31.219602", "stderr": "rm: cannot remove 'bashscripts': No such file or directory", "stderr_lines": ["rm: cannot remove 'bashscripts': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [create new bashscripts directory] **************************************************************
changed: [localhost]

TASK [clone bash scripts repo into server] ***********************************************************
changed: [localhost]

TASK [giving ownership to build.sh and giving excecuting permissions to build.sh] ********************
changed: [localhost]

TASK [running script to make build] ******************************************************************
changed: [localhost]

PLAY RECAP *******************************************************************************************
localhost                  : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

ubuntu@ip-172-31-87-138:~$ ls
Gold_Site_Ecommerce-1  bashscripts  build.sh  build.yaml  gold
ubuntu@ip-172-31-87-138:~$ sudo vi deploy.yaml
ubuntu@ip-172-31-87-138:~$ cat deploy.yaml
---
- name: Playbook to deploy our application in kubernetes
  hosts: deployserver
  tasks:  
   - name: remove existing bashscripts directory and ignore task if bashscripts folder is not there
     ansible.builtin.shell:
       cmd: sudo rm -r bashscripts
     ignore_errors: yes    
       
   - name: create new bashscripts directory
     ansible.builtin.shell:
       cmd: sudo mkdir bashscripts         

   - name: clone bash scripts repo into server
     ansible.builtin.shell:
       cmd: sudo git clone https://github.com/akhilgit19/react-nginx_bashscripts.git
       chdir: bashscripts/

   - name: giving ownership to build.sh and giving excecuting permissions to deploy.sh
     ansible.builtin.shell:
       cmd: sudo chown ubuntu deploy.sh && sudo chmod 744 deploy.sh
       chdir: bashscripts/react-nginx_bashscripts

   - name: running script to make build
     ansible.builtin.shell: 
       cmd: ./deploy.sh
       chdir: bashscripts/react-nginx_bashscripts/
ubuntu@ip-172-31-87-138:~$ ansible-playbook deploy.yaml --syntax-check

playbook: deploy.yaml
ubuntu@ip-172-31-87-138:~$ ansible-playbook deploy.yaml

PLAY [Playbook to deploy our application in kubernetes] **********************************************

TASK [Gathering Facts] *******************************************************************************
ok: [172.31.86.66]

TASK [remove existing bashscripts directory and ignore task if bashscripts folder is not there] ******
fatal: [172.31.86.66]: FAILED! => {"changed": true, "cmd": "sudo rm -r bashscripts", "delta": "0:00:00.017000", "end": "2024-08-31 07:07:35.466143", "msg": "non-zero return code", "rc": 1, "start": "2024-08-31 07:07:35.449143", "stderr": "rm: cannot remove 'bashscripts': No such file or directory", "stderr_lines": ["rm: cannot remove 'bashscripts': No such file or directory"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [create new bashscripts directory] **************************************************************
changed: [172.31.86.66]

TASK [clone bash scripts repo into server] ***********************************************************
changed: [172.31.86.66]

TASK [giving ownership to build.sh and giving excecuting permissions to deploy.sh] *******************
changed: [172.31.86.66]

TASK [running script to make build] ******************************************************************
changed: [172.31.86.66]

PLAY RECAP *******************************************************************************************
172.31.86.66               : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=1   

ubuntu@ip-172-31-87-138:

To check in deploy server
-------------------------------
Last login: Sat Aug 31 07:07:37 2024 from 172.31.87.138
ubuntu@ip-172-31-86-66:~$ microk8s kubectl get pods -n react-nginx-namespace
NAME                               READY   STATUS    RESTARTS   AGE
react-deployment-959dfb7cb-5f4fr   1/1     Running   0          100s
react-deployment-959dfb7cb-msf69   1/1     Running   0          100s
