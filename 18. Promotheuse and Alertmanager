ubuntu@ip-172-31-80-10:~$ microk8s kubectl get pods -n monitoring
NAME                                                     READY   STATUS    RESTARTS   AGE
alertmanager-prometheus-kube-prometheus-alertmanager-0   2/2     Running   0          36m
prometheus-grafana-578946f5d5-4djln                      3/3     Running   0          36m
prometheus-kube-prometheus-operator-d9998c787-mbbdw      1/1     Running   0          36m
prometheus-kube-state-metrics-6f5574c548-mlllt           1/1     Running   0          36m
prometheus-prometheus-kube-prometheus-prometheus-0       2/2     Running   0          36m
prometheus-prometheus-node-exporter-jxbv5                1/1     Running   0          36m
ubuntu@ip-172-31-80-10:~$ microk8s kubectl get svc -n monitoring
NAME                                      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                         AGE
alertmanager-operated                     ClusterIP   None             <none>        9093/TCP,9094/TCP,9094/UDP      100m
prometheus-grafana                        NodePort    10.152.183.134   <none>        80:30602/TCP                    100m
prometheus-kube-prometheus-alertmanager   ClusterIP   10.152.183.143   <none>        9093/TCP,8080/TCP               100m
prometheus-kube-prometheus-operator       ClusterIP   10.152.183.168   <none>        443/TCP                         100m
prometheus-kube-prometheus-prometheus     NodePort    10.152.183.21    <none>        9090:30381/TCP,8080:31756/TCP   100m
prometheus-kube-state-metrics             ClusterIP   10.152.183.50    <none>        8080/TCP                        100m
prometheus-operated                       ClusterIP   None             <none>        9090/TCP                        100m
prometheus-prometheus-node-exporter       NodePort    10.152.183.153   <none>        9100:31098/TCP                  100m


ubuntu@ip-172-31-80-10:~$ microk8s kubectl get crd -n monitoring
NAME                                                  CREATED AT
alertmanagerconfigs.monitoring.coreos.com             2025-01-03T15:47:41Z
alertmanagers.monitoring.coreos.com                   2025-01-03T15:47:41Z
bgpconfigurations.crd.projectcalico.org               2025-01-03T15:41:01Z
bgppeers.crd.projectcalico.org                        2025-01-03T15:41:01Z
blockaffinities.crd.projectcalico.org                 2025-01-03T15:41:02Z
caliconodestatuses.crd.projectcalico.org              2025-01-03T15:41:02Z
clusterinformations.crd.projectcalico.org             2025-01-03T15:41:02Z
felixconfigurations.crd.projectcalico.org             2025-01-03T15:41:02Z
globalnetworkpolicies.crd.projectcalico.org           2025-01-03T15:41:02Z
globalnetworksets.crd.projectcalico.org               2025-01-03T15:41:02Z
hostendpoints.crd.projectcalico.org                   2025-01-03T15:41:02Z
ipamblocks.crd.projectcalico.org                      2025-01-03T15:41:02Z
ipamconfigs.crd.projectcalico.org                     2025-01-03T15:41:02Z
ipamhandles.crd.projectcalico.org                     2025-01-03T15:41:02Z
ippools.crd.projectcalico.org                         2025-01-03T15:41:02Z
ipreservations.crd.projectcalico.org                  2025-01-03T15:41:02Z
kubecontrollersconfigurations.crd.projectcalico.org   2025-01-03T15:41:02Z
networkpolicies.crd.projectcalico.org                 2025-01-03T15:41:03Z
networksets.crd.projectcalico.org                     2025-01-03T15:41:03Z
podmonitors.monitoring.coreos.com                     2025-01-03T15:47:42Z
probes.monitoring.coreos.com                          2025-01-03T15:47:42Z
prometheusagents.monitoring.coreos.com                2025-01-03T15:47:42Z
prometheuses.monitoring.coreos.com                    2025-01-03T15:47:43Z
prometheusrules.monitoring.coreos.com                 2025-01-03T15:47:44Z
scrapeconfigs.monitoring.coreos.com                   2025-01-03T15:47:44Z
servicemonitors.monitoring.coreos.com                 2025-01-03T15:47:44Z
thanosrulers.monitoring.coreos.com                    2025-01-03T15:47:45Z
ubuntu@ip-172-31-80-10:~$ microk8s kubectl get prometheuses.monitoring.coreos.com  -n monitoring -o yaml
apiVersion: v1
items:
- apiVersion: monitoring.coreos.com/v1
  kind: Prometheus
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-01-03T15:48:01Z"
    generation: 1
    labels:
      app: kube-prometheus-stack-prometheus
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 67.7.0
      chart: kube-prometheus-stack-67.7.0
      heritage: Helm
      release: prometheus
    name: prometheus-kube-prometheus-prometheus
    namespace: monitoring
    resourceVersion: "8205"
    uid: c18511a8-ad6c-4880-8937-7772e42ddf6a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - prometheus
              - key: prometheus
                operator: In
                values:
                - prometheus-kube-prometheus-prometheus
            topologyKey: kubernetes.io/hostname
          weight: 100
    alerting:
      alertmanagers:
      - apiVersion: v2
        name: prometheus-kube-prometheus-alertmanager
        namespace: monitoring
        pathPrefix: /
        port: http-web
    automountServiceAccountToken: true
    enableAdminAPI: false
    evaluationInterval: 30s
    externalUrl: http://prometheus-kube-prometheus-prometheus.monitoring:9090
    hostNetwork: false
    image: quay.io/prometheus/prometheus:v3.1.0
    listenLocal: false
    logFormat: logfmt
    logLevel: info
    paused: false
    podMonitorNamespaceSelector: {}
    podMonitorSelector:
      matchLabels:
        release: prometheus
    portName: http-web
    probeNamespaceSelector: {}
    probeSelector:
      matchLabels:
        release: prometheus
    replicas: 1
    retention: 10d
    routePrefix: /
    ruleNamespaceSelector: {}
    ruleSelector:
      matchLabels:
        release: prometheus
    scrapeConfigNamespaceSelector: {}
    scrapeConfigSelector:
      matchLabels:
        release: prometheus
    scrapeInterval: 30s
    securityContext:
      fsGroup: 2000
      runAsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccountName: prometheus-kube-prometheus-prometheus
    serviceMonitorNamespaceSelector: {}
    serviceMonitorSelector:
      matchLabels:
        release: prometheus
    shards: 1
    tsdb:
      outOfOrderTimeWindow: 0s
    version: v3.1.0
    walCompression: true
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-01-03T16:51:34Z"
      message: ""
      observedGeneration: 1
      reason: ""
      status: "True"
      type: Available
    - lastTransitionTime: "2025-01-03T16:51:34Z"
      message: ""
      observedGeneration: 1
      reason: ""
      status: "True"
      type: Reconciled
    paused: false
    replicas: 1
    selector: app.kubernetes.io/instance=prometheus-kube-prometheus-prometheus,app.kubernetes.io/managed-by=prometheus-operator,app.kubernetes.io/name=prometheus,operator.prometheus.io/name=prometheus-kube-prometheus-prometheus,prometheus=prometheus-kube-prometheus-prometheus
    shardStatuses:
    - availableReplicas: 1
      replicas: 1
      shardID: "0"
      unavailableReplicas: 0
      updatedReplicas: 1
    shards: 1
    unavailableReplicas: 0
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
ubuntu@ip-172-31-80-10:~$ ls
get_helm.sh  react-chart  servicemonitor.yaml  snap
ubuntu@ip-172-31-80-10:~$ sudo vi alertmanagerrules.yaml
ubuntu@ip-172-31-80-10:~$ microk8s kubectl apply -f alertmanagerrules.yaml
prometheusrule.monitoring.coreos.com/react-nginx-cpu-alert created


ubuntu@ip-172-31-80-10:~$ microk8s kubectl get prometheusrules -n monitoring
NAME                                                              AGE
prometheus-kube-prometheus-alertmanager.rules                     9h
prometheus-kube-prometheus-config-reloaders                       9h
prometheus-kube-prometheus-etcd                                   9h
prometheus-kube-prometheus-general.rules                          9h
prometheus-kube-prometheus-k8s.rules.container-cpu-usage-second   9h
prometheus-kube-prometheus-k8s.rules.container-memory-cache       9h
prometheus-kube-prometheus-k8s.rules.container-memory-rss         9h
prometheus-kube-prometheus-k8s.rules.container-memory-swap        9h
prometheus-kube-prometheus-k8s.rules.container-memory-working-s   9h
prometheus-kube-prometheus-k8s.rules.container-resource           9h
prometheus-kube-prometheus-k8s.rules.pod-owner                    9h
prometheus-kube-prometheus-kube-apiserver-availability.rules      9h
prometheus-kube-prometheus-kube-apiserver-burnrate.rules          9h
prometheus-kube-prometheus-kube-apiserver-histogram.rules         9h
prometheus-kube-prometheus-kube-apiserver-slos                    9h
prometheus-kube-prometheus-kube-prometheus-general.rules          9h
prometheus-kube-prometheus-kube-prometheus-node-recording.rules   9h
prometheus-kube-prometheus-kube-scheduler.rules                   9h
prometheus-kube-prometheus-kube-state-metrics                     9h
prometheus-kube-prometheus-kubelet.rules                          9h
prometheus-kube-prometheus-kubernetes-apps                        9h
prometheus-kube-prometheus-kubernetes-resources                   9h
prometheus-kube-prometheus-kubernetes-storage                     9h
prometheus-kube-prometheus-kubernetes-system                      9h
prometheus-kube-prometheus-kubernetes-system-apiserver            9h
prometheus-kube-prometheus-kubernetes-system-controller-manager   9h
prometheus-kube-prometheus-kubernetes-system-kube-proxy           9h
prometheus-kube-prometheus-kubernetes-system-kubelet              9h
prometheus-kube-prometheus-kubernetes-system-scheduler            9h
prometheus-kube-prometheus-node-exporter                          9h
prometheus-kube-prometheus-node-exporter.rules                    9h
prometheus-kube-prometheus-node-network                           9h
prometheus-kube-prometheus-node.rules                             9h
prometheus-kube-prometheus-prometheus                             9h
prometheus-kube-prometheus-prometheus-operator                    9h
react-nginx-cpu-alert                                             7h5m
ubuntu@ip-172-31-80-10:~$ 

Now you have delete pods in monitoring and restart the server.


ubuntu@ip-172-31-80-10:~$ microk8s kubectl get pods -n monitoring
NAME                                                     READY   STATUS    RESTARTS      AGE
alertmanager-prometheus-kube-prometheus-alertmanager-0   2/2     Running   0             26m
prometheus-grafana-578946f5d5-4qkkc                      3/3     Running   3 (28m ago)   7h10m
prometheus-kube-prometheus-operator-d9998c787-x27cc      1/1     Running   1 (28m ago)   7h10m
prometheus-kube-state-metrics-6f5574c548-f4mxs           1/1     Running   1 (28m ago)   7h10m
prometheus-prometheus-kube-prometheus-prometheus-0       2/2     Running   2 (28m ago)   7h10m
prometheus-prometheus-node-exporter-bk7vl                1/1     Running   1 (28m ago)   7h10m
ubuntu@ip-172-31-80-10:~$ microk8s kubectl get crd -n monitoring
NAME                                                  CREATED AT
alertmanagerconfigs.monitoring.coreos.com             2025-01-03T15:47:41Z
alertmanagers.monitoring.coreos.com                   2025-01-03T15:47:41Z
bgpconfigurations.crd.projectcalico.org               2025-01-03T15:41:01Z
bgppeers.crd.projectcalico.org                        2025-01-03T15:41:01Z
blockaffinities.crd.projectcalico.org                 2025-01-03T15:41:02Z
caliconodestatuses.crd.projectcalico.org              2025-01-03T15:41:02Z
clusterinformations.crd.projectcalico.org             2025-01-03T15:41:02Z
felixconfigurations.crd.projectcalico.org             2025-01-03T15:41:02Z
globalnetworkpolicies.crd.projectcalico.org           2025-01-03T15:41:02Z
globalnetworksets.crd.projectcalico.org               2025-01-03T15:41:02Z
hostendpoints.crd.projectcalico.org                   2025-01-03T15:41:02Z
ipamblocks.crd.projectcalico.org                      2025-01-03T15:41:02Z
ipamconfigs.crd.projectcalico.org                     2025-01-03T15:41:02Z
ipamhandles.crd.projectcalico.org                     2025-01-03T15:41:02Z
ippools.crd.projectcalico.org                         2025-01-03T15:41:02Z
ipreservations.crd.projectcalico.org                  2025-01-03T15:41:02Z
kubecontrollersconfigurations.crd.projectcalico.org   2025-01-03T15:41:02Z
networkpolicies.crd.projectcalico.org                 2025-01-03T15:41:03Z
networksets.crd.projectcalico.org                     2025-01-03T15:41:03Z
podmonitors.monitoring.coreos.com                     2025-01-03T15:47:42Z
probes.monitoring.coreos.com                          2025-01-03T15:47:42Z
prometheusagents.monitoring.coreos.com                2025-01-03T15:47:42Z
prometheuses.monitoring.coreos.com                    2025-01-03T15:47:43Z
prometheusrules.monitoring.coreos.com                 2025-01-03T15:47:44Z
scrapeconfigs.monitoring.coreos.com                   2025-01-03T15:47:44Z
servicemonitors.monitoring.coreos.com                 2025-01-03T15:47:44Z
thanosrulers.monitoring.coreos.com                    2025-01-03T15:47:45Z

ubuntu@ip-172-31-80-10:~$ microk8s kubectl get alertmanagers.monitoring.coreos.com  -n monitoring -o yaml
apiVersion: v1
items:
- apiVersion: monitoring.coreos.com/v1
  kind: Alertmanager
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-01-03T15:48:01Z"
    generation: 1
    labels:
      app: kube-prometheus-stack-alertmanager
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 67.7.0
      chart: kube-prometheus-stack-67.7.0
      heritage: Helm
      release: prometheus
    name: prometheus-kube-prometheus-alertmanager
    namespace: monitoring
    resourceVersion: "16791"
    uid: 2ecb5aab-ff31-4b91-8e6b-e74bf85f7033
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - alertmanager
              - key: alertmanager
                operator: In
                values:
                - prometheus-kube-prometheus-alertmanager
            topologyKey: kubernetes.io/hostname
          weight: 100
    alertmanagerConfigNamespaceSelector: {}
    alertmanagerConfigSelector: {}
    automountServiceAccountToken: true
    externalUrl: http://prometheus-kube-prometheus-alertmanager.monitoring:9093
    image: quay.io/prometheus/alertmanager:v0.27.0
    listenLocal: false
    logFormat: logfmt
    logLevel: info
    paused: false
    portName: http-web
    replicas: 1
    retention: 120h
    routePrefix: /
    securityContext:
      fsGroup: 2000
      runAsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccountName: prometheus-kube-prometheus-alertmanager
    version: v0.27.0
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-01-04T00:40:11Z"
      message: ""
      observedGeneration: 1
      reason: ""
      status: "True"
      type: Available
    - lastTransitionTime: "2025-01-04T00:30:11Z"
      message: ""
      observedGeneration: 1
      reason: ""
      status: "True"
      type: Reconciled
    paused: false
    replicas: 1
    selector: alertmanager=prometheus-kube-prometheus-alertmanager,app.kubernetes.io/instance=prometheus-kube-prometheus-alertmanager,app.kubernetes.io/managed-by=prometheus-operator,app.kubernetes.io/name=alertmanager
    unavailableReplicas: 0
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""


ubuntu@ip-172-31-80-10:~$ helm show values prometheus-community/kube-prometheus-stack -n monitoring > promo_values.yaml
WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/ubuntu/.kube/config
WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/ubuntu/.kube/config
ubuntu@ip-172-31-80-10:~$ sudo vi promo_values.yaml
ubuntu@ip-172-31-80-10:~$ helm upgrade prometheus prometheus-community/kube-prometheus-stack -n monitoring -f promo_values.yaml
WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/ubuntu/.kube/config
WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/ubuntu/.kube/config
