In docker server

ubuntu@ip-172-31-21-226:~/Gold_Site_Ecommerce$ sudo docker ps
CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS         PORTS                               NAMES
33837931464e   react-docker-image   "/docker-entrypoint.…"   21 minutes ago   Up 2 minutes   0.0.0.0:80->80/tcp, :::80->80/tcp   react-nginx-deploy
ubuntu@ip-172-31-21-226:~/Gold_Site_Ecommerce$ sudo docker login
Log in with your Docker ID or email address to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com/ to create one.
You can log in with your password or a Personal Access Token (PAT). Using a limited-scope PAT grants better security and is required for organizations using SSO. Learn more at https://docs.docker.com/go/access-tokens/

Username: akhilpagadapoola
Password: 
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credential-stores

Login Succeeded
ubuntu@ip-172-31-21-226:~/Gold_Site_Ecommerce$ sudo docker tag react-docker-image:latest akhilpagadapoola/react-nginx-repo:latest
ubuntu@ip-172-31-21-226:~/Gold_Site_Ecommerce$ sudo docker push akhilpagadapoola/react-nginx-repo:latest
The push refers to repository [docker.io/akhilpagadapoola/react-nginx-repo]
3ee85ba4dd56: Pushed 
28d40eb13793: Mounted from library/nginx 
2ee64cbdc81d: Mounted from library/nginx 
a0bde08c3815: Mounted from library/nginx 
3be2be874bba: Mounted from library/nginx 
fb5df5db7bbd: Mounted from library/nginx 
eadc278e8f9e: Mounted from library/nginx 
9dca7439e1b3: Mounted from library/nginx 
b895814e9e64: Mounted from library/nginx 
latest: digest: sha256:0a3bf9050709a264ef84669d7406f5cefd0edcb4a1b90033ff327d5c71e0514c size: 2200
ubuntu@ip-172-31-21-226:~/Gold_Site_Ecommerce$ 


Now create a new kubernetes server 

Last login: Thu Aug 15 15:20:32 on ttys001
akhilpagadapoola@Akhils-MacBook-Air Kubernetes_keypair % ssh -i "kubernetes_key_pair.pem" ubuntu@ec2-18-234-52-22.compute-1.amazonaws.com
The authenticity of host 'ec2-18-234-52-22.compute-1.amazonaws.com (18.234.52.22)' can't be established.
ED25519 key fingerprint is SHA256:2rngwv0Ij0yM5TMNC7TdOB87t5ECVpBgXNevGOBxboE.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'ec2-18-234-52-22.compute-1.amazonaws.com' (ED25519) to the list of known hosts.
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for 'kubernetes_key_pair.pem' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key "kubernetes_key_pair.pem": bad permissions
ubuntu@ec2-18-234-52-22.compute-1.amazonaws.com: Permission denied (publickey).
akhilpagadapoola@Akhils-MacBook-Air Kubernetes_keypair % chmod 400 "kubernetes_key_pair.pem"
akhilpagadapoola@Akhils-MacBook-Air Kubernetes_keypair % ssh -i "kubernetes_key_pair.pem" ubuntu@ec2-18-234-52-22.compute-1.amazonaws.com
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-1009-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Thu Aug 15 10:34:15 UTC 2024

  System load:  0.36              Processes:             106
  Usage of /:   22.7% of 6.71GB   Users logged in:       0
  Memory usage: 21%               IPv4 address for enX0: 172.31.27.132
  Swap usage:   0%

Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update


The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

ubuntu@ip-172-31-27-132:~$ sudo snap install microk8s --classic
microk8s (1.30/stable) v1.30.3 from Canonical✓ installed
ubuntu@ip-172-31-27-132:~$ microk8s status --wait-ready
Insufficient permissions to access MicroK8s.
You can either try again with sudo or add the user ubuntu to the 'microk8s' group:

    sudo usermod -a -G microk8s ubuntu
    sudo chown -R ubuntu ~/.kube

After this, reload the user groups either via a reboot or by running 'newgrp microk8s'.
ubuntu@ip-172-31-27-132:~$ sudo usermod -a -G microk8s ubuntu
ubuntu@ip-172-31-27-132:~$ sudo su - root
root@ip-172-31-27-132:~# sudo su - ubuntu
ubuntu@ip-172-31-27-132:~$ microk8s kubectl get all --all-namespaces
NAMESPACE     NAME                                          READY   STATUS    RESTARTS   AGE
kube-system   pod/calico-kube-controllers-796fb75cc-6mz6s   1/1     Running   0          3m10s
kube-system   pod/calico-node-5qnl9                         1/1     Running   0          3m10s
kube-system   pod/coredns-5986966c54-p9q8g                  1/1     Running   0          3m10s

NAMESPACE     NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE
default       service/kubernetes   ClusterIP   10.152.183.1    <none>        443/TCP                  3m35s
kube-system   service/kube-dns     ClusterIP   10.152.183.10   <none>        53/UDP,53/TCP,9153/TCP   3m27s

NAMESPACE     NAME                         DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE
kube-system   daemonset.apps/calico-node   1         1         1       1            1           kubernetes.io/os=linux   3m26s

NAMESPACE     NAME                                      READY   UP-TO-DATE   AVAILABLE   AGE
kube-system   deployment.apps/calico-kube-controllers   0/1     1            0           3m28s
kube-system   deployment.apps/coredns                   0/1     1            0           3m30s

NAMESPACE     NAME                                                DESIRED   CURRENT   READY   AGE
kube-system   replicaset.apps/calico-kube-controllers-796fb75cc   1         1         0       3m28s
kube-system   replicaset.apps/coredns-5986966c54                  1         1         0       3m28s
ubuntu@ip-172-31-27-132:~$ sudo vi react-deployment.yaml
ubuntu@ip-172-31-27-132:~$ cat react-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-deployment  
  labels:
    app: react
spec:
  replicas: 2
  selector:
    matchLabels:
      app: react
  template:
    metadata:
      labels:
        app: react
    spec:
      containers:
      - name: react
        image: akhilpagadapoola/react-nginx-repo
        ports:
        - containerPort: 80

ubuntu@ip-172-31-27-132:~$ alias kubectl="microk8s kubectl"
ubuntu@ip-172-31-27-132:~$ kubectl create ns react-nginx
namespace/react-nginx created
ubuntu@ip-172-31-27-132:~$ ls
react-deployment.yaml  snap
ubuntu@ip-172-31-27-132:~$ sudo vi react-deployment.yaml
ubuntu@ip-172-31-27-132:~$ kubectl apply -f react-deployment.yaml
deployment.apps/react-deployment created
